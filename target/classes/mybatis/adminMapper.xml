<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">
	<resultMap type="noticeDto" id="noticeMap">
		<result property="noti_no" column="NOTI_NO" />
		<result property="noti_title" column="NOTI_TITLE" />
		<result property="noti_content" column="NOTI_CONTENT" />
		<result property="noti_date" column="NOTI_DATE" />
		<result property="noti_upd_date" column="NOTI_UPD_DATE" />
		<result property="noti_count" column="NOTI_COUNT" />
		<result property="noti_img" column="NOTI_IMG" />
	</resultMap>

	<select id="noticeList" parameterType="list" resultMap="noticeMap">
		SELECT
			  NOTI_NO
			, NOTI_TITLE
			, NOTI_DATE
			, NOTI_COUNT
		FROM mydb.NOTICE
		ORDER BY NOTI_NO DESC
	</select>

	<select id="noticeDetail" resultType="noticeDto" parameterType="int">
		SELECT *
		FROM NOTICE
		WHERE NOTI_NO = #{noti_no}
	</select>

	<insert id="inputNotice" parameterType="noticeDto">
		INSERT INTO mydb.NOTICE (
			  NOTI_NO
			, USER_NO
			, NOTI_TITLE
			, NOTI_CONTENT
			, NOTI_DATE
			, NOTI_IMG
		) VALUES(
			  (SELECT IFNULL(MAX(N.NOTI_NO),0) + 1 FROM mydb.NOTICE N)
			, #{noti_title}
			, #{noti_content}
			, #{noti_date}
			, #{noti_img})
	</insert>

	<update id="modifyNotice" parameterType="noticeDto">
		UPDATE NOTICE
		SET
			  NOTI_TITLE = #{noti_title}
			, NOTI_CONTENT = #{noti_content}
			, NOTI_UPD_DATE = #{noti_upd_date}
			, NOTI_IMG = #{noti_img}
		WHERE NOTI_NO = #{noti_no}
	</update>

	<delete id="deleteNotice" parameterType="int">
		DELETE
		FROM NOTICE
		WHERE NOTI_NO = #{noti_no}
	</delete>

	<resultMap type="faqDto" id="faqMap">
		<result property="faq_no" column="FAQ_NO" />
		<result property="user_no" column="USER_NO" />
		<result property="faq_title" column="FAQ_TITLE" />
		<result property="faq_content" column="FAQ_CONTENT" />
		<result property="faq_date" column="FAQ_DATE" />
		<result property="faq_upd_date" column="FAQ_UPD_DATE" />
		<result property="faq_category" column="FAQ_CATEGORY" />
		<result property="faq_count" column="FAQ_COUNT" />
	</resultMap>

	<select id="faqList" parameterType="list" resultMap="faqMap">
		SELECT
			  FAQ_NO
			, FAQ_CATEGORY
			, FAQ_TITLE
			, FAQ_DATE
			, FAQ_COUNT
		FROM mydb.FAQ
		ORDER BY FAQ_NO DESC
	</select>

	<select id="faqDetail" parameterType="String" resultType="faqDto">
		SELECT
			FAQ_NO
			, FAQ_TITLE
			, FAQ_CONTENT
			, FAQ_DATE
			, FAQ_CATEGORY
			, FAQ_COUNT
		FROM mydb.FAQ
		WHERE FAQ_NO = #{faq_no}
	</select>

	<insert id="inputFaq" parameterType="faqDto" keyProperty="faq_no">
		INSERT INTO mydb.FAQ (
			  FAQ_NO
			, FAQ_TITLE
			, FAQ_CONTENT
			, FAQ_DATE
			, FAQ_CATEGORY
		) VALUES(
			(SELECT IFNULL(MAX(F.FAQ_NO),0) + 1 FROM mydb.FAQ F)
			, #{faq_title}
			, #{faq_content}
			, NOW()
			, #{faq_category})
	</insert>

	<update id="modifyFaq" parameterType="faqDto">
		UPDATE FAQ
		SET 
 			  FAQ_TITLE = #{faq_title}
			, FAQ_CONTENT = #{faq_content}
			, FAQ_UPD_DATE = NOW()
			, FAQ_CATEGORY = #{faq_category}
		WHERE FAQ_NO = #{faq_no}
	</update>

	<delete id="deleteFaq" parameterType="int">
		DELETE
		FROM FAQ
		WHERE FAQ_NO = #{faq_no}
	</delete>

	<select id="hashTagSearch" parameterType="string"
		resultType="faqDto">
		SELECT
			FAQ_NO
			, FAQ_CATEGORY
			, FAQ_TITLE
			, FAQ_DATE
			FROM FAQ
		WHERE FAQ_CATEGORY = #{faq_category}
	</select>

	<select id="qnaList" parameterType="list" resultType="QnaDto">
		SELECT
			  Q_NO
			, Q_TITLE
			, Q_DATE
			, Q_STATUS
			, Q_COUNT
		FROM mydb.QNA
		ORDER BY Q_NO DESC
	</select>

	<insert id="inputQnaReply" parameterType="qnaDto">
		INSERT INTO mydb.QNA (
			Q_RE_NO
			, Q_RE_TITLE
			, Q_RE_CONTENT
			, Q_RE_DATE
		) VALUES(
			(SELECT IFNULL(MAX(Q.Q_NO),0) + 1 FROM QNA Q)
			, #{q_re_title}
			, #{q_re_content}
			, NOW())
	</insert>

	<update id="modifyQnaReply" parameterType="qnaDto">
		UPDATE QNA
		SET
			  Q_RE_TITLE = #{q_re_title}
			, Q_RE_CONTENT = #{q_re_content}
			, Q_RE_UPD_DATE = #{q_re_upd_date}
		WHERE Q_RE_NO = #{q_re_no}
	</update>

	<delete id="deleteQnaReply" parameterType="int">
		DELETE
		FROM QNA
		WHERE Q_RE_NO = #{q_re_no}
	</delete>

	<select id="courseList" parameterType="pageDto" resultType="courseDto">
		<![CDATA[
			SELECT 
				  @rownum:=@rownum +1 as rnum
				, C_NO
				, C_NAME
				, APP_PERSONNEL
				, ENT_PERSONNEL
				, DATE_FORMAT(C_REGDATE, '%Y-%m-%d') as C_REGDATE
				, DATE_FORMAT(C_START_DATE, '%Y-%m-%d') as C_START_DATE
				, DATE_FORMAT(C_LAST_DATE, '%Y-%m-%d') as C_LAST_DATE
			FROM mydb.COURSE C, (SELECT @rownum:=0) R
			WHERE C_NAME LIKE CONCAT('%', #{keyword}, '%')
			ORDER BY rnum desc
			LIMIT ${cri.pageStart}, ${cri.amount}
		]]>
	</select>

	<select id="getTotalCount" parameterType="String" resultType="int">
		SELECT
			COUNT(*) as TOTAL_COUNT
		FROM mydb.COURSE
		WHERE C_NAME LIKE CONCAT('%', #{value}, '%')
	</select>

	<select id="courseDetail" parameterType="hashMap" resultType="courseDto">
		SELECT
			C_NO
			, C_NAME
			, C_CATEGORY
			, C_TYPE
			, C_START_TIME
			, C_TIME
			, DATE_FORMAT(C_START_DATE, '%Y-%m-%d') as C_START_DATE
			, DATE_FORMAT(C_LAST_DATE, '%Y-%m-%d') as C_LAST_DATE
			, ENT_PERSONNEL
			, DATE_FORMAT(APP_START_DATE, '%Y-%m-%d') as APP_START_DATE
			, DATE_FORMAT(APP_LAST_DATE, '%Y-%m-%d') as APP_LAST_DATE
			, DATE_FORMAT(C_REGDATE, '%Y-%m-%d') as C_REGDATE
			, C_DETAIL
			, C_TUITION
		FROM mydb.COURSE
		WHERE C_NO = #{c_no}
	</select>

	<insert id="inputCourse" parameterType="courseDto">
		INSERT INTO mydb.COURSE (
			C_NO
			, USER_NO
			, C_NAME
			, C_CATEGORY
			, C_TYPE
			, C_TIME
			, C_DETAIL
			, ENT_PERSONNEL
			, APP_PERSONNEL
			, C_REGDATE
			, C_INIT_WRITER
			, C_START_DATE
			, C_LAST_DATE
			, C_START_TIME
			, APP_START_DATE
			, APP_LAST_DATE
			, C_TUITION
		) VALUES (
			(SELECT IFNULL(MAX(C.C_NO),0) + 1 FROM mydb.COURSE C)
			, '2'
			, #{c_name}
			, #{c_category}
			, #{c_type}
			, #{c_time}
			, #{c_detail}
			, #{ent_personnel}
			, #{app_personnel}
			, NOW()
			, '관리자'
			, #{c_start_date}
			, #{c_last_date}
			, #{c_start_time}
			, #{app_start_date}
			, #{app_last_date}
			, #{c_tuition})
	</insert>

	<update id="modifyCourse" parameterType="courseDto">
		UPDATE mydb.COURSE
		SET
			C_NAME = #{c_name}
			, C_CATEGORY = #{c_category}
			, C_TYPE = #{c_type}
			, C_TIME = #{c_time}
			, C_START_TIME = #{c_start_time}
			, ENT_PERSONNEL = #{ent_personnel}
			, C_START_DATE = #{c_start_date}
			, C_LAST_DATE = #{c_last_date}
			, APP_START_DATE = #{app_start_date}
			, APP_LAST_DATE = #{app_last_date}
			, C_DETAIL = #{c_detail}
			, C_UPD_DATE = NOW()
			, C_UPD_WRITER = '관리자'
			, C_TUITION = #{c_tuition}
		WHERE C_NO = #{c_no}
	</update>

	<update id="courseViewsCount" parameterType="int">
		UPDATE mydb.COURSE
		SET C_COUNT = C_COUNT + 1
		WHERE C_NO = #{c_no}
	</update>

	<delete id="deleteCourse" parameterType="int">
		DELETE
		FROM mydb.COURSE
		WHERE C_NO = #{c_no}
	</delete>

	<select id="appList" parameterType="pageDto" resultType="hashmap">
	<![CDATA[
		SELECT
			  @rownum:=@rownum +1 as rnum
			, c.C_NAME
			, m.USER_NO
			, m.USER_NAME
			, DATE_FORMAT(APP_DATE, '%Y-%m-%d') as APP_DATE
			, DATE_FORMAT(C_START_DATE, '%Y-%m-%d') as C_START_DATE
			, DATE_FORMAT(C_LAST_DATE, '%Y-%m-%d') as C_LAST_DATE
		FROM mydb.APPLICATION a, mydb.COURSE c, mydb.MEMBER m, (SELECT @rownum:=0) R
		WHERE a.USER_NO = m.USER_NO  
		  AND c.C_NO = a.C_NO 
		  AND C_NAME LIKE CONCAT('%', #{keyword}, '%')
		ORDER BY rnum DESC
		LIMIT ${cri.pageStart}, ${cri.amount}
	]]>
	</select>

	<select id="getAppTotal" parameterType="pageDto" resultType="int">
		SELECT
			COUNT(app_no) as TOTAL_COUNT
		FROM mydb.APPLICATION a
		  LEFT JOIN mydb.COURSE c ON a.C_NO = c.C_NO
		WHERE c.C_NAME LIKE CONCAT('%', #{keyword}, '%')
	</select>

	<select id="appDetail" parameterType="hashMap" resultType="appDto">
		SELECT
			c.C_NO
			, a.APP_NO
			, c.C_NAME
			, c.C_CATEGORY
			, c.C_TYPE
			, c.C_START_TIME
			, c.C_TIME
			, DATE_FORMAT(C_START_DATE, '%Y-%m-%d') as C_START_DATE
			, DATE_FORMAT(C_LAST_DATE, '%Y-%m-%d') as C_LAST_DATE
			, m.USER_NO
			, m.USER_NAME
			, m.USER_EMAIL
			, m.USER_PHONE
			, m.USER_ADDR
			, DATE_FORMAT(APP_DATE, '%Y-%m-%d') as APP_DATE
			, c.C_TUITION
		FROM mydb.APPLICATION a
		  LEFT JOIN mydb.COURSE c ON a.C_NO = c.C_NO
		  LEFT JOIN mydb.MEMBER m ON c.USER_NO = m.USER_NO
		WHERE a.APP_NO = #{app_no}
	</select>
</mapper>
	 