<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">
	<!-- admin Notice -->
		<resultMap type="noticeDto" id="noticeMap">
			<result property="noti_no" column="NOTI_NO" />
			<result property="noti_title" column="NOTI_TITLE"/>
			<result property="noti_content" column="NOTI_CONTENT"/>
			<result property="noti_date" column="NOTI_DATE"/>
			<result property="noti_upd_date" column="NOTI_UPD_DATE"/>
			<result property="noti_count" column="NOTI_COUNT"/>
			<result property="noti_img" column="NOTI_IMG"/>
		</resultMap>
		
		<select id="adminNoticeList" parameterType="list" resultMap="noticeMap">
			SELECT NOTI_NO, NOTI_TITLE, NOTI_DATE, NOTI_COUNT
			FROM mydb.NOTICE
			ORDER BY NOTI_NO DESC
		</select>
		
		<select id="adminNoticeDetail" resultType="noticeDto" parameterType="int">
			SELECT *
			FROM NOTICE
			WHERE NOTI_NO = #{noti_no}
		</select>
		
		<insert id="adminNoticeInsert" parameterType="noticeDto">
			INSERT INTO mydb.NOTICE 
			(			NOTI_NO
					  , USER_NO
					  , NOTI_TITLE
					  , NOTI_CONTENT
					  , NOTI_DATE
					  , NOTI_IMG
			)
			VALUES(
						(SELECT IFNULL(MAX(N.NOTI_NO),0) + 1 FROM mydb.NOTICE N)
					  , #{noti_title}
					  , #{noti_content}
					  , #{noti_date}
					  , #{noti_img}
			)
		</insert>
		
		<update id="adminNoticeUpdate" parameterType="noticeDto">
			UPDATE NOTICE
			SET 	NOTI_TITLE = #{noti_title}
				  , NOTI_CONTENT = #{noti_content}
				  , NOTI_UPD_DATE = #{noti_upd_date}
				   , NOTI_IMG = #{noti_img}
		</update>
		
		<delete id="adminNoticeDelete" parameterType="int">
			DELETE FROM NOTICE WHERE NOTI_NO = #{noti_no}
		</delete>
		
		
	<!-- admin FAQ -->
		<resultMap type="faqDto" id="faqMap">
			<result property="faq_no" column="FAQ_NO" />
			<result property="user_no" column="USER_NO" />
			<result property="faq_title" column="FAQ_TITLE" />
			<result property="faq_content" column="FAQ_CONTENT" />
			<result property="faq_date" column="FAQ_DATE" />
			<result property="faq_upd_date" column="FAQ_UPD_DATE" />
			<result property="faq_category" column="FAQ_CATEGORY" />
			<result property="faq_count" column="FAQ_COUNT" />
		</resultMap>
		
		<select id="adminFaqList" parameterType="list" resultMap="faqMap">
			SELECT FAQ_NO, FAQ_CATEGORY, FAQ_TITLE, FAQ_DATE, FAQ_COUNT 
			FROM mydb.FAQ
			ORDER BY FAQ_NO DESC
		</select>
		
		<select id="faqSelectOne" parameterType="String" resultType="faqDto">
			SELECT FAQ_NO, FAQ_TITLE, FAQ_CONTENT, FAQ_DATE, FAQ_CATEGORY, FAQ_COUNT
			FROM mydb.FAQ
			WHERE FAQ_NO = #{faq_no}
		</select>
		
		<insert id="adminFaqInsert" parameterType="faqDto" keyProperty="faq_no">
			INSERT INTO mydb.FAQ 
			(			FAQ_NO
					  , FAQ_TITLE
					  , FAQ_CONTENT
					  , FAQ_DATE
					  , FAQ_CATEGORY
			)
			VALUES(		   
					   (SELECT IFNULL(MAX(F.FAQ_NO),0) + 1 FROM mydb.FAQ F)
					 , #{faq_title}
					 , #{faq_content}
					 , NOW()
					 , #{faq_category}
			)
		</insert>
		
		<update id="adminFaqUpdate" parameterType="faqDto">
			UPDATE FAQ
			
			SET FAQ_TITLE = #{faq_title}
			  , FAQ_CONTENT = #{faq_content}
			  , FAQ_UPD_DATE = NOW() 
			  , FAQ_CATEGORY = #{faq_category}
			  
			WHERE FAQ_NO = #{faq_no}
		</update>
		
		<delete id="adminFaqDelete" parameterType="int">
			DELETE FROM FAQ WHERE FAQ_NO = #{faq_no}
		</delete>
		
		<select id="hashTagSearch" parameterType="string" resultType="faqDto">
			SELECT FAQ_NO, FAQ_CATEGORY, FAQ_TITLE, FAQ_DATE
			FROM FAQ
			WHERE FAQ_CATEGORY = #{faq_category}
		</select>
			
	
	<!-- admin QnA -->
	<!--  QnA List -->
		<select id="adminQnaList" parameterType="list" resultType="QnaDto">
			SELECT Q_NO, Q_TITLE, Q_DATE, Q_STATUS, Q_COUNT
			FROM mydb.QNA
			ORDER BY Q_NO DESC
		</select>
	
	<!-- QnA 답변 -->
		<insert id="adminQnaReplyInsert" parameterType="qnaDto">
			INSERT INTO mydb.QNA 
			(			Q_RE_NO
					  , Q_RE_TITLE
					  , Q_RE_CONTENT
					  , Q_RE_DATE
			)
			VALUES(
					   (SELECT IFNULL(MAX(Q.Q_NO),0) + 1 FROM QNA Q)
					 , #{q_re_title}
					 , #{q_re_content}
					 , NOW() 
			)
		</insert>
		
		<update id="adminQnaReplyUpdate" parameterType="qnaDto">
			UPDATE QNA
			
			SET 	Q_RE_TITLE = #{q_re_title}
				  , Q_RE_CONTENT = #{q_re_content}
				  , Q_RE_UPD_DATE = #{q_re_upd_date}
				  
			WHERE Q_RE_NO = #{q_re_no}
		</update>
		
		<delete id="adminQnaReplyDelete" parameterType="int">
			DELETE FROM QNA WHERE Q_RE_NO = #{q_re_no}
		</delete>
		
	<!-- admin Course -->
		<!-- 전체 리스트 -->
		<select id="adminCourseList" parameterType="pageDto" resultType="courseDto">
			SELECT 
					  @rownum:=@rownum +1 as rnum
					, C_NO
					, C_NAME
					, APP_PERSONNEL
					, ENT_PERSONNEL
					, DATE_FORMAT(C_REGDATE, '%Y-%m-%d') as C_REGDATE
					, DATE_FORMAT(C_START_DATE, '%Y-%m-%d') as C_START_DATE
					, DATE_FORMAT(C_LAST_DATE, '%Y-%m-%d') as C_LAST_DATE
			FROM mydb.COURSE C, (SELECT @rownum:=0) R
			
			WHERE C_NAME LIKE CONCAT('%', #{keyword}, '%')
			
			ORDER BY rnum desc
			
			LIMIT ${startPage}, ${cri.amount}
		</select>
		
		<!-- 게시글 총 갯수 -->
		<select id="getTotal" parameterType="String" resultType="int">
			SELECT COUNT(*) as TOTAL_COUNT
			FROM mydb.course
			WHERE C_NAME LIKE CONCAT('%', #{value}, '%')
		</select>
		
		<!-- 상세 페이지 -->
		<select id="adminCourseDetail" parameterType="courseDto" resultType="courseDto">
			SELECT 
					  C_NO
					, C_NAME
					, C_CATEGORY
					, C_TYPE
					, C_START_TIME
					, C_TIME
					, DATE_FORMAT(C_START_DATE, '%Y-%m-%d') as C_START_DATE
					, DATE_FORMAT(C_LAST_DATE, '%Y-%m-%d') as C_LAST_DATE
					, ENT_PERSONNEL
					, DATE_FORMAT(APP_START_DATE, '%Y-%m-%d') as APP_START_DATE
					, DATE_FORMAT(APP_LAST_DATE,  '%Y-%m-%d') as APP_LAST_DATE
					, DATE_FORMAT(NOW(), '%Y-%m-%d') as C_REGDATE
					, C_DETAIL
					, C_TUITION
					
			FROM mydb.COURSE
			
			WHERE C_NO = #{c_no}
		</select>
		
		<!-- 교육 등록 -->
		<insert id="adminCourseInsert" parameterType="courseDto">
			INSERT INTO mydb.COURSE
			(			C_NO
					  , USER_NO
					  , C_NAME
					  , C_CATEGORY
					  , C_TYPE
					  , C_TIME
					  , C_DETAIL
					  , ENT_PERSONNEL
					  , C_REGDATE
					  , C_INIT_WRITER
					  , C_START_DATE
					  , C_LAST_DATE
					  , C_START_TIME 
					  , APP_START_DATE
					  , APP_LAST_DATE
					  , C_TUITION
			)
			VALUES
			(		   (SELECT IFNULL(MAX(C.C_NO),0) + 1 FROM mydb.COURSE C)
					 , '2'
					 , #{c_name}
					 , #{c_category}
					 , #{c_type}
					 , #{c_time}
					 , #{c_detail}
					 , #{ent_personnel}
					 , NOW() 
					 , '관리자'
					 , #{c_start_date}
					 , #{c_last_date}
					 , #{c_start_time}
					 , #{app_start_date}
					 , #{app_last_date}
					 , #{c_tuition}
			)
		</insert>
		
		<!-- 교육 수정 -->
		<update id="adminCourseUpdate" parameterType="courseDto">
			UPDATE mydb.COURSE
			
			SET 	C_NAME = #{c_name}
				  , C_CATEGORY = #{c_category}
				  , C_TYPE = #{c_type}
				  , C_TIME = #{c_time}
				  , C_START_TIME = #{c_start_time}
				  , ENT_PERSONNEL = #{ent_personnel}
				  , C_START_DATE = #{c_start_date}
				  , C_LAST_DATE = #{c_last_date}
				  , APP_START_DATE = #{app_start_date}
				  , APP_LAST_DATE = #{app_last_date}
				  , C_DETAIL = #{c_detail}
				  , C_UPD_DATE = NOW()
				  , C_UPD_WRITER = '관리자'
				  , C_TUITION = #{c_tuition}
				  
			WHERE C_NO = #{c_no}
		</update>
		
		<!-- 조회수 -->
		<update id="adminCourseCount" parameterType="int">
			UPDATE mydb.COURSE 
			SET C_COUNT = C_COUNT + 1
			WHERE C_NO = #{c_no}
		</update>
		
		<!-- 교육 삭제 -->
		<delete id="adminCourseDelete" parameterType="int">
			DELETE FROM mydb.COURSE WHERE C_NO = #{c_no}
		</delete>
		
</mapper>
	 